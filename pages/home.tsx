import type { GetServerSideProps, NextApiRequest, NextPage } from "next";
import { unstable_getServerSession } from "next-auth";
import Head from "next/head";
import { useRouter } from "next/router";
import { Header } from "../components/Header";
import { useAsync } from "../hooks/useAsync";
import { useInput } from "../hooks/useInput";
import api from "../services/api";
import { authOptions } from "./api/auth/[...nextauth]";
import { FaLink, FaSave } from "react-icons/fa";
import { Divisor } from "../components/Divisor";
import { SaveLinkPopUp } from "../components/SaveLinkPopUp";
import { useState } from "react";

interface HomeProps {
    secure: boolean;
}

const Home: NextPage<HomeProps> = ({ secure }) => {
    const router = useRouter();
    let hostname = "";
    const [popUp, setPopUp] = useState(false);
    const { input, handler } = useInput("");
    const { action, data } = useAsync(async (link) => {
        return await api.post("link", {
            link,
        });
    }, false);

    console.log(data);
    if (typeof window !== "undefined") {
        hostname = window.location.origin;
    }

    return (
        <div className="layout">
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />

            <main className="flex flex-col items-center w-full px-10 gap-2 md:w-[768px]">
                <h1 className="font-bold  mb-5 text-black text-3xl">
                    Encurte seus Links!
                </h1>

                <Divisor>
                    <FaLink />
                </Divisor>

                <div className="flex flex-col gap-5 w-full px-5">
                    <input
                        type="text"
                        className="url-box mt-5 shadow-lg focus:bg-sky-200"
                        value={input}
                        placeholder="Insira url para encurtar..."
                        onChange={handler}
                    />

                    <button
                        className="my-btn shadow-md hover:bg-sky-400 hover:text-white hover:shadow-lg hover:shadow-sky-400"
                        onClick={() => action(input)}
                    >
                        Create Short Url
                        <FaLink size={20} />
                    </button>

                    <input
                        className="url-box shadow-lg focus:bg-sky-200"
                        value={
                            data?.data?.result?.short
                                ? `${hostname}/api/${data.data.result.short}`
                                : "..."
                        }
                        disabled
                    />

                    {secure ? (
                        <button
                            className="my-btn shadow-md hover:bg-sky-400 hover:text-white hover:shadow-lg hover:shadow-sky-400 hover:py-8"
                            onClick={async () => {
                                setPopUp(true);
                                // saveLink({
                                //     shortId: data?.data.result.id,
                                // });
                            }}
                            disabled={!data?.data.result.id}
                        >
                            Save Short
                            <FaSave size={20} />
                        </button>
                    ) : (
                        <></>
                    )}
                </div>

                <SaveLinkPopUp
                    show={popUp}
                    disable={() => setPopUp(false)}
                    content={{
                        shortId: data?.data.result.id,
                        link: input,
                        short: `${hostname}/api/${data?.data.result.short}`,
                    }}
                />
            </main>
        </div>
    );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
    const session = await unstable_getServerSession(req, res, authOptions);
    return {
        props: {
            secure: !!session,
        },
    };
};

export default Home;
