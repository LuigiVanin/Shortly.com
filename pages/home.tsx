import type { GetServerSideProps, NextApiRequest, NextPage } from "next";
import { unstable_getServerSession } from "next-auth";
import Head from "next/head";
import { useRouter } from "next/router";
import { Header } from "../components/Header";
import { useAsync } from "../hooks/useAsync";
import { useInput } from "../hooks/useInput";
import api from "../services/api";
import { authOptions } from "./api/auth/[...nextauth]";
import { FaLink, FaSave } from "react-icons/fa";
import { Divisor } from "../components/Divisor";
import { SaveLinkPopUp } from "../components/SaveLinkPopUp";

interface HomeProps {
    secure: boolean;
}

const Home: NextPage<HomeProps> = ({ secure }) => {
    const router = useRouter();
    let hostname = "";

    const { action, data } = useAsync(async (link) => {
        return await api.post("link", {
            link,
        });
    }, false);

    const { action: saveLink } = useAsync(async (data) => {
        return await api.post("", data);
    }, false);

    console.log(!!data?.data.result.id);
    const { input, handler } = useInput("");

    if (typeof window !== "undefined") {
        hostname = window.location.origin;
    }

    return (
        <div className="layout">
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Header />

            <main className="flex flex-col items-center w-full px-10 gap-2 md:w-[768px]">
                <h1 className="font-bold  mb-5 text-white text-3xl">
                    Encurte seus Links!
                </h1>

                <Divisor>
                    <FaLink />
                </Divisor>

                <input
                    type="text"
                    className="url-box mt-5"
                    value={input}
                    placeholder="Insira url para encurtar..."
                    onChange={handler}
                />

                <button className="my-btn" onClick={() => action(input)}>
                    Create Short Url
                    <FaLink size={20} />
                </button>

                <div className="url-box">
                    {data?.data?.result?.short
                        ? `${hostname}/api/${data.data.result.short}`
                        : "..."}
                </div>

                {/* <SaveLinkPopUp /> */}

                {secure ? (
                    <button
                        className="my-btn"
                        onClick={async () => {
                            try {
                                console.log("save");
                                await api.post("link/save", {
                                    linkId: data?.data.result.id,
                                    title: "teste",
                                });
                            } catch (e) {
                                router.push("/");
                                console.log(e);
                            }
                        }}
                        disabled={!data?.data.result.id}
                    >
                        Save Short
                        <FaSave size={20} />
                    </button>
                ) : (
                    <></>
                )}
            </main>
        </div>
    );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
    const session = await unstable_getServerSession(req, res, authOptions);
    return {
        props: {
            secure: !!session,
        },
    };
};

export default Home;
